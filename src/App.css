.App {
  text-align: center;
}

.App-logo {
  height: 40vmin;
  pointer-events: none;
}

@media (prefers-reduced-motion: no-preference) {
  .App-logo {
    animation: App-logo-spin infinite 20s linear;
  }
}

.App-header {
  background-color: #282c34;
  min-height: 100vh;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  font-size: calc(10px + 2vmin);
  color: white;
}

.App-link {
  color: #61dafb;
}

@keyframes App-logo-spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

/* import "./App.css";
import React, {useState,useEffect, useRef, memo } from "react";

const App = memo(() => {
  // const [count, setCount] = useState(0);
  const Count = useRef(0);
  const [counter, setCounter] = useState(0);
  const increaseCount = () => {
    // debugger;
    if (Count.current.value < 50) {
      Count.current.value =
        Number(Count.current.value) + 1;
    }
  };
  const decreaseCount = () => {
    if (Count.current.value > 0) {
      Count.current.value -= 1;
    }
  };
  const inputChage = (ev) => {
    if (
      ev.current.value >= 0 &&
      ev.current.value <= 50
    ) {
      Count.current.value = ev.target.value;
    }
  };
  useEffect(()=>{
    setCounter(Count.current)
  },[Count.current])
  console.log("AppRender");
  return (
    <div className='App'>
      <h2>{counter}</h2>
      <div>
        <button onClick={decreaseCount}>-</button>
        <input
          ref={Count}
          value={Count.current}
          onChange={inputChage}
          type='number'
        />
        <button onClick={increaseCount}>+</button>
      </div>
    </div>
  );
});

export default App; */

